<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.recipe-mapper">
	<!-- resultType: 리턴형. // parameterType: 매개변수 -->
	
	<select id="recipeListData" resultType="RecipeVO" parameterType="java.util.Map">  
	<!-- 왜 parameterType="java.util.Map"?? start,end로 페이지 나눠야 하니까, start,end를 Map에다 넣어오려고 -->
		SELECT no,title,chef,poster,num
		FROM (SELECT no,title,chef,poster,rownum as num
		FROM (SELECT no,title,chef,poster
		FROM recipe ORDER BY no ASC))
		WHERE num BETWEEN #{start} AND #{end} 	
		<!-- [RecipeModel.java]
		map.put("start", start);  ==> map.get() ==> #{start}
		map.put("end", end); ==> #{end}
		 -->
	</select>
	
	<select id="recipeTotalPage" resultType="int">
		SELECT CEIL(COUNT(*)/20.0) FROM recipe
		<!-- 한 페이지에 레시피 20개씩 보여줄 예정 -->
	</select>
	
	<!-- chef -->
	<!-- [chef 테이블]
		CHEF      NOT NULL VARCHAR2(100) 
		POSTER    NOT NULL VARCHAR2(200) 
		MEM_CONT1          VARCHAR2(20)  
		MEM_CONT3          VARCHAR2(20)  
		MEM_CONT7          VARCHAR2(20)  
		MEM_CONT2          VARCHAR2(20)  
	 -->
	<select id="chefListData" resultType="ChefVO" parameterType="java.util.Map">
		SELECT chef,poster,mem_cont1,mem_cont2,mem_cont3,mem_cont7,num 
		FROM (SELECT chef,poster,mem_cont1,mem_cont2,mem_cont3,mem_cont7,rownum as num
		FROM (SELECT chef,poster,mem_cont1,mem_cont2,mem_cont3,mem_cont7
		FROM chef))
		WHERE num BETWEEN #{start} AND #{end}
		<!-- RecipeDAO에서 DB 보냄.. --> 
	</select>
	
	<select id="chefTotalPage" resultType="int">
		SELECT CEIL(COUNT(*)/30.0) FROM chef
	</select>
	
	<select id="recipeDetailData" resultType="RecipeDetailVO" parameterType="int">
		SELECT * 
		FROM recipe_detail
		WHERE no=#{no}
	</select>
	
	<select id="recipeCount2" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM recipe_detail
		WHERE no=#{no}
	</select>
	
	<!-- [recipe 테이블]
	NO     NOT NULL NUMBER        
	TITLE  NOT NULL VARCHAR2(300) 
	POSTER NOT NULL VARCHAR2(300) 
	CHEF   NOT NULL VARCHAR2(100) 
	 -->
	
	<select id="chefDetailData" resultType="RecipeVO" parameterType="java.util.Map">
	<!-- 셰프 클릭 시, 각 셰프가 만든 레시피 보여주므로 resultType이 RecipeVO -->
		SELECT no,title,poster,chef,num
		FROM (SELECT no,title,poster,chef,rownum as num
		FROM (SELECT no,title,poster,chef
		FROM recipe WHERE chef LIKE '%'||#{chef}||'%'))
		WHERE num BETWEEN #{start} AND #{end}		
	</select>
	<!-- Q. 왜 'chef LIKE' 사용? -->
		<!-- recipe 테이블에 chef가 'by 노란장미' 이런식으로 저장되어 있음 -->
		<!-- 이와 다르게, recipe_detail 테이블에 chef는 '노란장미' 이런식으로 저장되어 있고 이 값을 파라미터로 넘겨받음 -->
		<!-- 따라서 파라미터로 검색받는 셰프 이름을  LIKE 문장으로 검색해야. -->
	
	<select id="chefDataTotalPage" resultType="int" parameterType="string">
		SELECT CEIL(COUNT(*)/20.0) FROM recipe
		WHERE chef LIKE '%'||#{chef}||'%'  
	</select>
	
	<select id="recipeFindData" resultType="RecipeVO" parameterType="java.util.Map">
		SELECT no,title,chef,poster,rownum
		FROM recipe
		WHERE rownum&lt;=21
		<if test="fd!='전체'"> 
			<!-- AND title LIKE '%'||#{fd}||'%'  -->
			AND REGEXP_LIKE(title,#{fd}) <!--  면|우동 이면 면과 우동 둘 다 찾게 하기 위해서  (RecipeModel에서 면|우동 이런식으로 주게 해놨음)-->
		</if>
	</select>
	<!-- fd가 '전체'라면 SELECT만 수행,
	     fd가 '전체'가 아니라면  AND 구문 수행 ==> '동적쿼리.' -->
	
	
</mapper>












