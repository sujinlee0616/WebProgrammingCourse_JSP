/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-11 07:11:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sist.dao.BoardVO;
import com.sist.dao.BoardDAO;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sist.dao.BoardVO");
    _jspx_imports_classes.add("com.sist.dao.BoardDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 상세보기 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String no=request.getParameter("no");
	String strPage=request.getParameter("page");
	// no => DAO로 전송
	BoardDAO dao = new BoardDAO();
	// DAO에서 요청한 VO 하나를 받아온다.
	BoardVO vo=dao.boardDetailData(Integer.parseInt(no),0);
	// VO에 저장된 데이터를 HTML을 이용해서 출력

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".row{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 600px;\r\n");
      out.write("}\r\n");
      out.write("h2 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("var i=0;\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$('#delBtn').click(function(){\r\n");
      out.write("\t\tif(i==0) //i==0. '삭제' 버튼 눌렀을 때\r\n");
      out.write("\t\t{  \r\n");
      out.write("\t\t\t// 숨겨놨던 비밀번호 입력란 노출\r\n");
      out.write("\t\t\t$('#del').show();\r\n");
      out.write("\t\t\t// '삭제' 버튼을 '취소' 버튼으로 변경 \r\n");
      out.write("\t\t\t$('#delBtn').val(\"취소\");\r\n");
      out.write("\t\t\ti=1;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse // i==1. '취소' 버튼 눌렀을 때.\r\n");
      out.write("\t\t{ \r\n");
      out.write("\t\t\t$('#del').hide();\r\n");
      out.write("\t\t\t// '취소' 버튼을 '삭제' 버튼으로 변경 \r\n");
      out.write("\t\t\t$('#delBtn').val(\"삭제\");\r\n");
      out.write("\t\t\ti=0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#sendBtn').click(function(){\r\n");
      out.write("\t\tvar pwd=$('#pwd').val(); //input id=pwd의 값을 변수 pwd에 저장 \r\n");
      out.write("\t\tvar no=$('#no').val();\r\n");
      out.write("\t\tvar page=$('#page').val();\r\n");
      out.write("\t\tif(pwd==\"\"){\r\n");
      out.write("\t\t\t$('#pwd').focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// json방식 AJAX\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:'POST', // 감춰서 보낸다\r\n");
      out.write("\t\t\turl:'delete.jsp',  // sendBtn 눌렀을 때 pwd,no,page를 delete.jsp에 보낸다 \r\n");
      out.write("\t\t\tdata:{no:no,pwd:pwd,page:page}, //data:{변수:값,변수:값....}\r\n");
      out.write("\t\t\t// ==> get방식에서 delete.jsp?no=1&pwd=1234&page=12 이렇게 보내는것처럼 POST 방식으로 보내는 것임.\r\n");
      out.write("\t\t\tsuccess:function(res)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t/* alert(res); */\r\n");
      out.write("\t\t\t\tvar result=res.trim();\r\n");
      out.write("\t\t\t\tif(result==0){\r\n");
      out.write("\t\t\t\t\talert(\"비밀번호가 틀렸습니다.\");\r\n");
      out.write("\t\t\t\t\t$('#pwd').val(\"\"); // input id=pwd 값 지움 \r\n");
      out.write("\t\t\t\t\t$('#pwd').focus();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\tlocation.href=\"list.jsp?page=\"+page;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2>내용보기</h2>\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<table class=\"table table-hover\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th width=20% class=\"text-center success\">번호</th>\r\n");
      out.write("\t\t\t\t\t<td width=30% class=\"text-center\">");
      out.print(vo.getNo() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th width=20% class=\"text-center success\">작성일</th>\r\n");
      out.write("\t\t\t\t\t<td width=30% class=\"text-center\">");
      out.print(vo.getRegdate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th width=20% class=\"text-center success\">이름</th>\r\n");
      out.write("\t\t\t\t\t<td width=30% class=\"text-center\">");
      out.print(vo.getName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th width=20% class=\"text-center success\">조회수</th>\r\n");
      out.write("\t\t\t\t\t<td width=30% class=\"text-center\">");
      out.print(vo.getHit() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th width=20% class=\"text-center success\">제목</th>\r\n");
      out.write("\t\t\t\t\t<td width=30% class=\"text-center\">");
      out.print(vo.getSubject() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" class=\"text-left\" valign=\"top\" height=\"200\">\r\n");
      out.write("\t\t\t\t\t\t<pre style=\"white-space:pre-wrap; background-color: white; border: none;\">");
      out.print(vo.getContent() );
      out.write("</pre>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" class=\"text-right\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"reply.jsp?no=");
      out.print(vo.getNo() );
      out.write("&page=");
      out.print(strPage );
      out.write("\" class=\"btn btn-xs btn-success\">답변</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"update.jsp?no=");
      out.print(vo.getNo() );
      out.write("&page=");
      out.print(strPage );
      out.write("\" class=\"btn btn-xs btn-primary\">수정</a>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" class=\"btn btn-xs btn-danger\" id=\"delBtn\" value=\"삭제\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"list.jsp?page=");
      out.print(strPage );
      out.write("\" class=\"btn btn-xs btn-info\">목록</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr id=\"del\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t\t<td colspan=\"4\" class=\"text-right\">\r\n");
      out.write("\t\t\t\t\t\t비밀번호:\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" id=\"pwd\" size=10 class=\"input-sm\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"no\" value=\"");
      out.print(no);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"page\" value=\"");
      out.print(strPage);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" value=\"삭제\" class=\"btn btn-sm btn-danger\" id=\"sendBtn\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("\t<AJAX>\r\n");
      out.write("\t - AJAX: Asynchronous JavaScript + XML\r\n");
      out.write("\t - X가 XML을 의미하긴 하지만, 요즘은 JSON을 더 많이 사용함.\r\n");
      out.write(" \t - AJAX를 사용하지 않으면, 수정/삭제 시에 alert 뜨면서 화면이 사라졌다가 alert 닫으면 화면이 다시 생김(깜빡거림. 화면이 변경됨.)\r\n");
      out.write(" \t - 겉보기에는 화면에 출력되는 게 바뀐다는 점에서 javascript로 setTimeOut()해서 조정하는 것들과 비슷해보이지만,\r\n");
      out.write(" \t   AJAX는 DB에서 데이터 갖고와서 처리한다는 점에서 다르다. \r\n");
      out.write("\t<AJAX 사용 예시>\r\n");
      out.write(" \t - 회원가입할 시 id 유효성검사를 하면 가끔 '중복된 id입니다'가, 화면전환 없이 표시되는 경우가 있음 ==> AJAX 사용한거임. \r\n");
      out.write(" \t - '더보기' 누르면 깜빡거림 없이 리스트 더 나오는 것...\r\n");
      out.write(" \t - 검색어 자동완성 \r\n");
      out.write("-->\r\n");
      out.write("<!-- \r\n");
      out.write("\t<jQuery>\r\n");
      out.write("\t - jQuery는 onload(HTML, CSS, image 다 불러진 상태)된 상태에서 동작함\r\n");
      out.write("\t 1) 함수\r\n");
      out.write("\t  - JavaScript: window.onload=function(){}\r\n");
      out.write("\t  - jQuery: $(function(){});\r\n");
      out.write("\t 2) 특정ID를 가진 요소 선택하기\r\n");
      out.write("\t  - JavaScript: document.getElementById('delBtn')\r\n");
      out.write("\t  - jQuery: $('#delBtn')\r\n");
      out.write("\t 3) 특정class를 가진 요소 선택하기 \r\n");
      out.write("\t  - JavaScript: document.getElementsByClassName('wrap')\r\n");
      out.write("\t  - jQuery: $('.wrap')\r\n");
      out.write("\t 4) 특정 tag 가져오기\r\n");
      out.write("\t  - JavaScript: document.getElementsByTagName('td')\r\n");
      out.write("\t  - jQuery: $('td')\r\n");
      out.write("\t 5) element의 attribute/text/value 가져오는 법\r\n");
      out.write("\t  (1) element의 text 가져오기 \r\n");
      out.write("\t  - <a>bbb</a> 에서 bbb를 가져오고 싶다면?\r\n");
      out.write("\t  \t $('a').text()\r\n");
      out.write("\t  (2) \r\n");
      out.write("\t  - <a></a> 안에 bbb를 넣고 싶다면? \r\n");
      out.write("\t  \t $('a').text('bbb')\r\n");
      out.write("\t  - <a href=\"kkk\" id=\"k\"></a>에서 kkk 값을 가져오고 싶다면? \r\n");
      out.write("\t \t $('#k').attr(\"href\")\r\n");
      out.write("\t  - <input type=\"text\" id=\"p\" value=\"kkk\">에서 kkk를 ddd로 바꾸고 싶다면? \r\n");
      out.write("\t  \t $('#p').val() => $('#p').val('ddd')\r\n");
      out.write("\t  - <td><span>ooo</span></td> \r\n");
      out.write("\t  \t $('td>span').text() ===> ooo\r\n");
      out.write("\t  \t $('td').text() ==> ooo \r\n");
      out.write(" -->\r\n");
      out.write("<!-- <Annotation>: index같은거라고...? -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
