/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-11 03:48:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 사용자에게 보여지는 답변달기 화면 -->\r\n");
      out.write("\r\n");

	String no=request.getParameter("no");
	String strPage=request.getParameter("page");


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- require 쓰기 위해서 HTML 5 버젼 쓰자 ==> head 부분을 HTML5 양식으로 고쳤음 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".row{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 600px;\r\n");
      out.write("}\r\n");
      out.write("h2 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2>답변하기</h2>\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<form method=post action=\"reply_ok.jsp\">\r\n");
      out.write("\t\t\t<!-- action: reply_ok.jsp ==> form에서 보내주는 데이터를  reply_ok.jsp에서 받아서 DB 처리 -->\r\n");
      out.write("\t\t\t\t<table class=\"table table-hover\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20% class=\"text-right success\">이름</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"name\" size=15 required>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 데이터 숨겨서 보내기 (reply_ok.jsp한테 줄 데이터) -->\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=pno value=\"");
      out.print(no);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<!-- pno:parentNo. 왜냐면, DAO에서 가져온 번호는, 답글의 엄마 번호임 -->\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 답글의 no는 DAO에서 가져온 번호가 아님. \r\n");
      out.write("\t\t\t\t\t\t\t\t  답글의 컬럼값은 엄마글의 번호에서 group_id, group_step, group_tab 읽어와서 거기에 1씩 더해줘야 -->\r\n");
      out.write("\t\t\t\t\t\t\t<!-- ex)        \t   no       group_id   group_step   group_tab\r\n");
      out.write("\t\t\t\t\t\t\t         AAAAAAAA\t\t1\t\t\t1\t\t\t0\t\t\t0\r\n");
      out.write("\t\t\t\t\t\t\t         \t┗ BBBBBB\t2\t\t\t1\t\t\t1\t\t\t1\r\n");
      out.write("\t\t\t\t\t\t\t-->\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=page value=\"");
      out.print(strPage);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t<!-- post방식으로 보내주니까 get방식처럼 url에 싣어다 정보 보낼 수 X ==> hidden으로 숨겨서 보낸다  -->\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20% class=\"text-right success\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"subject\" size=50 required>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20% class=\"text-right success\">내용</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<textarea rows=\"8\" cols=\"50\" name=\"content\" required></textarea>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th width=20% class=\"text-right success\">비밀번호</th>\r\n");
      out.write("\t\t\t\t\t\t<td width=80%>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" name=\"pwd\" size=10 required>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"text-center\" colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\" value=\"답변하기\" class=\"btn btn-sm btn-primary\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" value=\"취소\" class=\"btn btn-sm btn-danger\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"javascript:history.back()\">\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
